{"version":3,"sources":["user/Matthew-Joki-Resume.pdf","hooks/useLocalStorage.js","auth/UserContext.js","routes-nav/Navigation.js","homepage/Homepage.js","api/api.js","websites/WebsiteCard.js","common/LoadingSpinner.js","websites/WebsiteList.js","common/SearchForm.js","skills/SkillCard.js","skills/SkillCardList.js","skills/SkillList.js","common/Alert.js","auth/LoginForm.js","profiles/ProfileForm.js","auth/SignupForm.js","routes-nav/PrivateRoute.js","websites/WebsiteDetail.js","user/Matthew-Joki.jpg","user/Summary.js","user/AboutPage.js","routes-nav/Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useLocalStorage","key","firstValue","arguments","length","undefined","initialValue","localStorage","getItem","item","setItem","useState","useEffect","console","debug","removeItem","UserContext","React","createContext","Navigation","_ref","logout","currentUser","useContext","createElement","className","Link","to","NavLink","onClick","first_name","username","Homepage","firstName","style","background","borderRadius","border","color","height","padding","boxShadow","margin","type","BASE_URL","process","REACT_APP_BASE_URL","JoblyApi","endpoint","data","method","url","concat","headers","Authorization","token","params","axios","err","error","response","message","Array","isArray","this","request","user","title","websites","id","website","name","skills","WebsiteCard","user_id","description","web_url","borderBottom","fontSize","href","backgroundImage","LoadingSpinner","WebsiteList","setWebsites","async","getWebsites","search","marginLeft","marginTop","paddingRight","paddingLeft","map","w","SearchForm","searchFor","searchTerm","setSearchTerm","handleSubmit","evt","preventDefault","trim","onSubmit","placeholder","value","onChange","target","Button","variant","backgroundColor","SkillCard","SkillCardList","add","s","SkillList","setSkills","getSkills","Search","Alert","messages","role","LoginForm","login","history","useHistory","formData","setFormData","password","formErrors","setFormErrors","result","success","push","errors","handleChange","l","autoComplete","required","ProfileForm","setCurrentUser","lastName","email","saveConfirmed","setSaveConfirmed","f","paddingBottom","updatedUser","profileData","saveProfile","SignupForm","signup","PrivateRoute","exact","path","children","Route","Redirect","WebsiteDetail","useParams","setWebsite","getWebsite","getCompany","paddingTop","Summary","float","src","Matthew","width","alt","AboutPage","MatthewResume","Routes","register","Switch","App","infoLoaded","setInfoLoaded","setToken","jwt","decode","getCurrentUser","BrowserRouter","Provider","loginData","signupData","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ee4faebd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Matthew-Joki-Resume.5149c920.pdf\";","import { useState, useEffect } from \"react\";\n\n/** Custom hook for keeping state data synced with localStorage.\n *\n * This creates `item` as state and look in localStorage for current value\n * (if not found, defaults to `firstValue`)\n *\n * When `item` changes, effect re-runs:\n * - if new state is null, removes from localStorage\n * - else, updates localStorage\n *\n * To the component, this just acts like state that is also synced to/from\n * localStorage::\n *\n *   const [myThing, setMyThing] = useLocalStorage(\"myThing\")\n */\n\nfunction useLocalStorage(key, firstValue = null) {\n  const initialValue = localStorage.getItem(key) || firstValue;\n\n  const [item, setItem] = useState(initialValue);\n\n  useEffect(function setKeyInLocalStorage() {\n    console.debug(\"hooks useLocalStorage useEffect\", \"item=\", item);\n\n    if (item === null) {\n      localStorage.removeItem(key);\n    } else {\n      localStorage.setItem(key, item);\n    }\n  }, [key, item]);\n\n  return [item, setItem];\n}\n\nexport default useLocalStorage;\n","import React from \"react\";\n\n/** Context: provides currentUser object and setter for it throughout app. */\n\nconst UserContext = React.createContext();\n\nexport default UserContext;\n","import React, { useContext } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\nimport \"./Navigation.css\";\n\n\n/** Navigation bar for site. Shows up on every page.\n *\n * When user is logged in, shows links to main areas of site. When not,\n * shows link to Login and Signup forms.\n *\n * Rendered by App.\n */\n\n\nfunction Navigation({ logout }) {\n  const { currentUser } = useContext(UserContext);\n  console.debug(\"Navigation\", \"currentUser=\", currentUser);\n\n  function loggedInNav() {\n    return (\n        <ul className=\"navbar-nav  ml-auto\">\n          <li className=\"nav-item  mr-4\">\n            <NavLink className=\"nav-link \" to=\"/about\">\n              About\n            </NavLink>\n          </li>\n          <li className=\"nav-item  mr-4\">\n            <NavLink className=\"nav-link \" to=\"/websites\">\n              Websites\n            </NavLink>\n          </li>\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link \" to=\"/skills\">\n              Skills\n            </NavLink>\n          </li>\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link \" to=\"/profile\">\n              Profile\n            </NavLink>\n          </li>\n          <li className=\"nav-item \">\n            <Link className=\"nav-link \" to=\"/\" onClick={logout}>\n              Log out {currentUser.first_name || currentUser.username}\n            </Link>\n          </li>\n        </ul>\n    );\n  }\n\n  function loggedOutNav() {\n    return (\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link \" to=\"/login\">\n              Login\n            </NavLink>\n          </li>\n          <li className=\"nav-item mr-4\">\n            <NavLink className=\"nav-link \" to=\"/signup\">\n              Sign Up\n            </NavLink>\n          </li>\n        </ul>\n    );\n  }\n\n  return (\n      <nav className=\"Navigation navbar navbar-expand-md\">\n        <Link className=\"nav-link navbar-brand\" to=\"/\">\n          { `[ { mjokipro }, ... ]` }\n        </Link>\n        {currentUser ? loggedInNav() : loggedOutNav()}\n      </nav>\n  );\n}\n\nexport default Navigation;\n","import React, { useContext } from \"react\";\nimport \"./Homepage.css\";\nimport UserContext from \"../auth/UserContext\";\nimport {Link} from 'react-router-dom'\n\n/** Homepage of site.\n *\n * Shows welcome message or login/register buttons.\n *\n * Routed at /\n *\n * Routes -> Homepage\n */\n\nfunction Homepage() {\n  const { currentUser } = useContext(UserContext);\n  console.debug(\"Homepage\", \"currentUser=\", currentUser);\n\n  return (\n      <div className=\"Homepage\">\n        <div className=\"container text-center\">\n     \n          <h1 >{ `[ { mjokipro }, ... ]` }</h1>\n          <p className=\"lead\">Welcome!  Please sign in or create an account.</p>\n          {currentUser\n              ? <h2>\n                Welcome Back, {currentUser.firstName || currentUser.username}!\n              </h2>\n              : (\n                  <p>\n                    <Link to=\"/login\">\n                  <button \n                  style={{   background: 'linear-gradient(45deg, #AEA1FF 5%, #dadcfa 95%)',\n                  borderRadius: 5,\n                  border: 0,\n                  color: 'white',\n                  height: 40,\n                  padding: '0 30px',\n                  boxShadow: '0 3px 5px 2px rgba(100, 105, 135, .3)',\n                  margin: '15px',}}\n                    type=\"submit\"\n                >\n                  Login\n                </button>\n                </Link>\n                <Link to=\"/signup\">\n                <button \n                  style={{   background: 'linear-gradient(45deg, #AEA1FF 5%, #dadcfa 95%)',\n                  borderRadius: 5,\n                  border: 0,\n                  color: 'white',\n                  height: 40,\n                  padding: '0 30px',\n                  boxShadow: '0 3px 5px 2px rgba(100, 105, 135, .3)',\n                  margin: '15px',}}\n                    type=\"submit\"\n                >\n                  Signup\n                </button>\n                </Link>\n                  </p>\n              )}\n        </div>\n      </div>\n  );\n}\n\nexport default Homepage;\n","import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass JoblyApi {\n  // the token for interactive with the API will be stored here.\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n    const params = (method === \"get\")\n        ? data\n        : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  /** Get the current user. */\n\n  static async getCurrentUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  /** Get websites (filtered by web_url if not undefined) */\n\n  static async getWebsites(title) {\n    let res = await this.request(\"websites\", {title});\n    return res.websites;\n  }\n\n  /** Get details on a company by handle. */\n\n  static async getWebsite(id) {\n    let res = await this.request(`websites/${id}`);\n    return res.website;\n  }\n\n  /** Get list of jobs (filtered by title if not undefined) */\n\n  static async getSkills(name) {\n    let res = await this.request(\"skills\", { name });\n    return res.skills;\n  }\n\n  /** Apply to a job */\n\n  static async addSkill(id, name) {\n    await this.request(`websites/${id}/skills/${name}`, {}, \"post\");\n  }\n\n  /** Get token for login from username, password. */\n\n  static async login(data) {\n    let res = await this.request(`auth/token`, data, \"post\");\n    return res.token;\n  }\n\n  /** Signup for site. */\n\n  static async signup(data) {\n    let res = await this.request(`auth/register`, data, \"post\");\n    return res.token;\n  }\n\n  /** Save user profile page. */\n\n  static async saveProfile(username, data) {\n    let res = await this.request(`users/${username}`, data, \"patch\");\n    return res.user;\n  }\n}\n\n\nexport default JoblyApi;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./WebsiteCard.css\";\n\n/** Show limited information about a company\n *\n * Is rendered by CompanyList to show a \"card\" for each company.\n *\n * CompanyList -> CompanyCard\n */\n\nfunction WebsiteCard({ id, user_id, title, description, web_url }) {\n  console.debug(\"Website Card=\", web_url, \"title=\", title);\n\n  return (\n         <div style={{borderBottom: 'rgba(30, 98, 108, 0.729)'}} className=\"text-center\">\n          {/* <h2>{name}</h2> */}\n         <a className=\"font-weight-bold \" style={{color: 'rgba(5, 20, 43, 0.700)', fontSize: '20px'}} href={web_url}>{title}</a>\n            <div className=\"card text-white mt-3 mb-5 text-left\" style={{borderBottom: '4px solid rgba(30, 98, 108, 0.729)', backgroundImage: 'linear-gradient(to  left, rgba(5, 20, 43, 0.700), rgba(11, 22, 36, 0.900))'}}>\n              <Link className=\"mt-3 mr-3 mb-3 ml-3 text-primary-emphasis\"  to={`/websites/${id}`}>\n              {description}\n              </Link>\n            </div>\n          </div>\n \n  );\n}\n\nexport default WebsiteCard;\n","import React from \"react\";\nimport \"./LoadingSpinner.css\";\n\n/** Loading message used by components that fetch API data. */\n\nfunction LoadingSpinner() {\n  return (\n      <div className=\"LoadingSpinner\">\n        Loading ...\n      </div>\n  );\n}\n\nexport default LoadingSpinner;","import React, { useState, useEffect } from \"react\";\nimport JoblyApi from \"../api/api\";\nimport WebsiteCard from \"./WebsiteCard\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\n\n/** Show page with list of companies.\n *\n * On mount, loads companies from API.\n * Re-loads filtered companies on submit from search form.\n *\n * This is routed to at /companies\n *\n * Routes -> { CompanyCard, SearchForm }\n */\n\nfunction WebsiteList() {\n  \n  const [websites, setWebsites] = useState([]);\n  console.debug(\"Website List=\", websites);\n\n  useEffect(function getCompaniesOnMount() {\n    console.debug(\"CompanyList useEffect getCompaniesOnMount\");\n    search();\n  }, []);\n\n  /** Triggered by search form submit; reloads companies. */\n  async function search(title) {\n    let websites = await JoblyApi.getWebsites(title);\n    setWebsites(websites);\n  }\n\n  if (!websites) return <LoadingSpinner />;\n\n  return (\n      <div  className=\"CompanyList col-md-8 offset-md-2\">\n        {/* <SearchForm searchFor={search} /> */}\n        <div className=\"container\" style={{borderRadius: '6px', border: '4px solid rgba(30, 98, 108, 0.729)'}}>\n        <div className=\"container  mt-4\" style={{borderRadius: '4px', borderBottom: '4px solid rgba(30, 98, 108, 0.729)', backgroundImage: 'linear-gradient(to  left, rgba(47, 45, 53, 0.777), rgba(22, 22, 36, 0.908))'}}>\n          <p className=\" display-4\" style={{fontSize: '47px', color: 'rgba(31, 117, 131, 0.821)'}}>Most Recent Developments...</p>\n          <p style={{marginLeft: '20px', fontSize: '20px', color: ' rgba(246, 69, 122, 0.792)'}}>{`Tested And Designed At: `} <span style={{color: 'rgba(31, 117, 131, 0.821)'}}>{`[ { mjokipro }, ... ]`}</span></p>\n       \n        </div>\n        {websites.length\n            ? (\n                <div style={{marginTop: '50px', paddingRight: '25px', paddingLeft: '25px', borderRadius: '6px', border: '4px solid rgba(30, 98, 108, 0.729)'}}  className=\"CompanyList-list\">\n                  {websites.map(w => (\n                      <WebsiteCard\n                          key={w.id}\n                          id={w.id}\n                          title={w.title}\n                          user_id={w.user_id}\n                          web_url={w.web_url}\n                          description={w.description}\n                      />\n                  ))}\n                </div>\n            ) : (\n                <p className=\"lead\">Sorry, no results were found!</p>\n            )}\n      </div>\n      </div>\n  );\n}\n\nexport default WebsiteList;\n","import React, { useState } from \"react\";\nimport \"./SearchForm.css\";\nimport Button from '@material-ui/core/Button';\n\n\n/** Search widget.\n *\n * Appears on CompanyList and JobList so that these can be filtered\n * down.\n *\n * This component doesn't *do* the searching, but it renders the search\n * form and calls the `searchFor` function prop that runs in a parent to do the\n * searching.\n *\n * { CompanyList, JobList } -> SearchForm\n */\n\nfunction SearchForm({ searchFor }) {\n  console.debug(\"SearchForm\", \"searchFor=\", typeof searchFor);\n\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  /** Tell parent to filter */\n  function handleSubmit(evt) {\n    // take care of accidentally trying to search for just spaces\n    evt.preventDefault();\n    searchFor(searchTerm.trim() || undefined);\n    setSearchTerm(searchTerm.trim());\n  }\n\n  /** Update form fields */\n  function handleChange(evt) {\n    setSearchTerm(evt.target.value);\n  }\n\n  return (\n      <div className=\"SearchForm mb-4\">\n        <form className=\"form-inline\" onSubmit={handleSubmit}>\n          <input\n              className=\"form-control form-control flex-grow-1\"\n              name=\"searchTerm\"\n              placeholder=\"Enter search term..\"\n              value={searchTerm}\n              onChange={handleChange}\n          />\n              <Button\n                variant=\"contained\"\n                style={{marginLeft: '10px', backgroundColor: ' rgba(246, 69, 122, 0.792)'}}\n                onClick={handleSubmit}\n              >\n                Search\n              </Button>\n        </form>\n      </div>\n  );\n}\n\nexport default SearchForm;\n","import React, {  } from \"react\";\nimport \"./SkillCard.css\";\n// import UserContext from \"../auth/UserContext\";\n\n/** Show limited information about a job.\n *\n * Is rendered by JobCardList to show a \"card\" for each job.\n *\n * Receives apply func prop from parent, which is called on apply.\n *\n * JobCardList -> JobCard\n */\n\nfunction SkillCard({ id, name }) {\n  console.debug(\"Skill Card name =\", name);\n\n  return (\n      <div style={{borderRadius: '4px'}} className=\"JobCard card mt-4\"> \n        <div style={{borderBottom:  '4px solid rgba(30, 98, 108, 0.729)', borderRadius: '4px', backgroundImage: 'linear-gradient(to  left, rgba(5, 20, 43, 0.700), rgba(11, 22, 36, 0.900))'}} className=\"card-body\">\n          <h6 className=\"card-title text-white\">{name}</h6>\n        </div>\n      </div>\n  );\n}\n\nexport default SkillCard;\n","import React from \"react\";\nimport SkillCard from \"./SkillCard\";\n\n/** Show list of job cards.\n *\n * Used by both JobList and CompanyDetail to list jobs. Receives an apply\n * func prop which will be called by JobCard on apply.\n *\n * JobList -> JobCardList -> JobCard\n * CompanyDetail -> JobCardList -> JobCard\n *\n */\n\nfunction SkillCardList({ skills, add }) {\n  console.debug(\"SkillCardList\", \"skills=\", skills);\n\n  return (\n    <div style={{ marginTop: '50px', paddingRight: '25px', paddingLeft: '25px', borderRadius: '6px'}}  className=\"mb-3 CompanyList-list\">\n    {skills.map(s => (\n            <SkillCard\n                key={s.id}\n                id={s.id}\n                name={s.name}\n            />\n        ))}\n      </div>\n  );\n}\n\nexport default SkillCardList;\n","import React, { useState, useEffect } from \"react\";\nimport Search from \"../common/SearchForm\";\nimport JoblyApi from \"../api/api\";\nimport SkillCardList from \"./SkillCardList\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\n\n/** Show page with list of jobs.\n *\n * On mount, loads jobs from API.\n * Re-loads filtered jobs on submit from search form.\n *\n * JobList -> JobCardList -> JobCard\n *\n * This is routed to at /jobs\n */\n\nfunction SkillList() {\n  console.debug(\"Skill List\");\n\n  const [skills, setSkills] = useState(null);\n\n  useEffect(function getAllJobsOnMount() {\n    console.debug(\"SkillList useEffect getAllJobsOnMount\");\n    search();\n  }, []);\n\n  /** Triggered by search form submit; reloads jobs. */\n  async function search(name) {\n    let skills = await JoblyApi.getSkills(name);\n    setSkills(skills);\n  }\n\n  if (!skills) return <LoadingSpinner />;\n\n  return (\n      <div className=\"JobList col-md-8 offset-md-2\">\n        <Search searchFor={search} />\n        <div className=\"container\" style={{borderRadius: '6px', border: '4px solid rgba(30, 98, 108, 0.729)'}}>\n        <div className=\"container  mt-4\" style={{borderRadius: '4px', borderBottom: '4px solid rgba(30, 98, 108, 0.729)', backgroundImage: 'linear-gradient(to  left, rgba(47, 45, 53, 0.777), rgba(22, 22, 36, 0.908))'}}>\n          <p className=\" display-4\" style={{fontSize: '50px', color: 'rgba(31, 117, 131, 0.821)'}}>Expertise</p>\n          <p style={{marginLeft: '20px', fontSize: '20px', color: ' rgba(246, 69, 122, 0.792)'}}>{`Software Solutions Provided By: `} <span style={{color: 'rgba(31, 117, 131, 0.821)'}}>{`[ { mjokipro }, ... ]`}</span></p>\n       \n        </div>\n        \n        {skills.length\n            ? <SkillCardList skills={skills} />\n            : <p className=\"lead\">Sorry, no results were found!</p>\n        }\n      </div>\n      </div>\n  );\n}\n\nexport default SkillList;\n","import React from \"react\";\n\n/** Presentational component for showing bootstrap-style alerts.\n *\n * { LoginForm, SignupForm, ProfileForm } -> Alert\n **/\n\nfunction Alert({ type = \"danger\", messages = [] }) {\n  console.debug(\"Alert\", \"type=\", type, \"messages=\", messages);\n\n  return (\n      <div className={`alert alert-${type}`} role=\"alert\">\n        {messages.map(error => (\n            <p className=\"mb-0 small\" key={error}>\n              {error}\n            </p>\n        ))}\n      </div>\n  );\n}\n\nexport default Alert;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert\";\n\n\n/** Login form.\n *\n * Shows form and manages update to state on changes.\n * On submission:\n * - calls login function prop\n * - redirects to /companies route\n *\n * Routes -> LoginForm -> Alert\n * Routed as /login\n */\n\nfunction LoginForm({ login }) {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  console.debug(\n      \"LoginForm\",\n      \"login=\", typeof login,\n      \"formData=\", formData,\n      \"formErrors\", formErrors,\n  );\n\n  /** Handle form submit:\n   *\n   * Calls login func prop and, if successful, redirect to /companies.\n   */\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    let result = await login(formData);\n    if (result.success) {\n      history.push(\"/websites\");\n    } else {\n      setFormErrors(result.errors);\n    }\n  }\n\n  /** Update form data field */\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(l => ({ ...l, [name]: value }));\n  }\n\n  return (\n      <div className=\"LoginForm\">\n        <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n          <h3 style={{color: 'rgba(246, 69, 122, 0.792)'}} className=\"mb-3\">Log In</h3>\n\n          <div className=\"card\" style={{backgroundImage: 'linear-gradient(to  left, rgba(47, 45, 53, 0.777), rgba(11, 22, 36, 0.900))'}} >\n            <div  className=\"card-body\">\n              <form onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <label className=\"text-white\">Username</label>\n                  <input\n                      name=\"username\"\n                      className=\"form-control\"\n                      value={formData.username}\n                      onChange={handleChange}\n                      autoComplete=\"username\"\n                      required\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label className=\"text-white\">Password</label>\n                  <input\n                      type=\"password\"\n                      name=\"password\"\n                      className=\"form-control\"\n                      value={formData.password}\n                      onChange={handleChange}\n                      autoComplete=\"current-password\"\n                      required\n                  />\n                </div>\n\n                {formErrors.length\n                    ? <Alert type=\"danger\" messages={formErrors} />\n                    : null}\n\n                <button \n                \n                    onSubmit={handleSubmit}\n                >\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default LoginForm;\n","import React, { useState, useContext } from \"react\";\nimport Alert from \"../common/Alert\";\nimport JoblyApi from \"../api/api\";\nimport UserContext from \"../auth/UserContext\";\nimport Button from '@material-ui/core/Button';\n\n// eslint-disable-next-line\n// import useTimedMessage from \"../hooks/useTimedMessage\";\n\n/** Profile editing form.\n *\n * Displays profile form and handles changes to local form state.\n * Submitting the form calls the API to save, and triggers user reloading\n * throughout the site.\n *\n * Confirmation of a successful save is normally a simple <Alert>, but\n * you can opt-in to our fancy limited-time-display message hook,\n * `useTimedMessage`, but switching the lines below.\n *\n * Routed as /profile\n * Routes -> ProfileForm -> Alert\n */\n\nfunction ProfileForm() {\n  const { currentUser, setCurrentUser } = useContext(UserContext);\n  const [formData, setFormData] = useState({\n    firstName: currentUser.firstName,\n    lastName: currentUser.lastName,\n    email: currentUser.email,\n    username: currentUser.username,\n    password: \"\",\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  // switch to use our fancy limited-time-display message hook\n  const [saveConfirmed, setSaveConfirmed] = useState(false);\n  // const [saveConfirmed, setSaveConfirmed] = useTimedMessage()\n\n  console.debug(\n      \"ProfileForm\",\n      \"currentUser=\", currentUser,\n      \"formData=\", formData,\n      \"formErrors=\", formErrors,\n      \"saveConfirmed=\", saveConfirmed,\n  );\n\n  /** on form submit:\n   * - attempt save to backend & report any errors\n   * - if successful\n   *   - clear previous error messages and password\n   *   - show save-confirmed message\n   *   - set current user info throughout the site\n   */\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n\n    let profileData = {\n      firstName: formData.firstName,\n      lastName: formData.lastName,\n      email: formData.email,\n      password: formData.password,\n    };\n\n    let username = formData.username;\n    let updatedUser;\n\n    try {\n      updatedUser = await JoblyApi.saveProfile(username, profileData);\n    } catch (errors) {\n      debugger;\n      setFormErrors(errors);\n      return;\n    }\n\n    setFormData(f => ({ ...f, password: \"\" }));\n    setFormErrors([]);\n    setSaveConfirmed(true);\n\n    // trigger reloading of user information throughout the site\n    setCurrentUser(updatedUser);\n  }\n\n  /** Handle form data changing */\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(f => ({\n      ...f,\n      [name]: value,\n    }));\n    setFormErrors([]);\n  }\n\n  return (\n      <div style={{paddingBottom: '15px', borderRadius: '6px', border: '4px solid rgba(30, 98, 108, 0.729)'}} className=\"col-md-6 col-lg-6 offset-md-3 offset-lg-3 \">\n        <div >\n        <div className=\"  mt-4\" style={{borderRadius: '4px', borderBottom: '4px solid rgba(30, 98, 108, 0.729)', backgroundImage: 'linear-gradient(to  left, rgba(47, 45, 53, 0.777), rgba(22, 22, 36, 0.908))'}}>\n          <p className=\" display-3\" style={{paddingLeft: '15px', fontSize: '70px', color: 'rgba(31, 117, 131, 0.821)'}}>Edit Profile</p>\n          <p style={{marginLeft: '30px', fontSize: '20px', color: ' rgba(246, 69, 122, 0.792)'}}>{`Update Info Here `}</p>\n        </div>\n       <br />\n       <br />\n        <div className=\"text-white\" style={{borderRadius: '4px', borderBottom: '4px solid rgba(30, 98, 108, 0.729)', backgroundImage: 'linear-gradient(to  left, rgba(47, 45, 53, 0.777), rgba(22, 22, 36, 0.908))'}}>\n          <div className=\"card-body\">\n            <form>\n              <div className=\"form-group\">\n                <label>Username</label>\n                <p className=\"form-control-plaintext\">{formData.username}</p>\n              </div>\n              <div className=\"form-group\">\n                <label>First Name</label>\n                <input\n                    name=\"firstName\"\n                    className=\"form-control\"\n                    value={formData.firstName}\n                    onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Last Name</label>\n                <input\n                    name=\"lastName\"\n                    className=\"form-control\"\n                    value={formData.lastName}\n                    onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Email</label>\n                <input\n                    name=\"email\"\n                    className=\"form-control\"\n                    value={formData.email}\n                    onChange={handleChange}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label>Confirm password to make changes:</label>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    className=\"form-control\"\n                    value={formData.password}\n                    onChange={handleChange}\n                />\n              </div>\n\n              {formErrors.length\n                  ? <Alert type=\"danger\" messages={formErrors} />\n                  : null}\n              \n              {saveConfirmed\n                  ?\n                  <Alert type=\"success\" messages={[\"Updated successfully.\"]} />\n                  : null}\n              \n              <Button\n              variant=\"contained\"\n                 style={{backgroundColor: ' rgba(246, 69, 122, 0.792)'}}\n                  onClick={handleSubmit}\n              >\n                Save Changes\n              </Button>\n            </form>\n          </div>\n        </div>\n      </div>\n      </div>\n  );\n}\n\nexport default ProfileForm;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Alert from \"../common/Alert\";\n\n/** Signup form.\n *\n * Shows form and manages update to state on changes.\n * On submission:\n * - calls signup function prop\n * - redirects to /companies route\n *\n * Routes -> SignupForm -> Alert\n * Routed as /signup\n */\n\nfunction SignupForm({ signup }) {\n  const history = useHistory();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n  });\n  const [formErrors, setFormErrors] = useState([]);\n\n  console.debug(\n      \"SignupForm\",\n      \"signup=\", typeof signup,\n      \"formData=\", formData,\n      \"formErrors=\", formErrors,\n  );\n\n  /** Handle form submit:\n   *\n   * Calls login func prop and, if successful, redirect to /companies.\n   */\n\n  async function handleSubmit(evt) {\n    evt.preventDefault();\n    let result = await signup(formData);\n    if (result.success) {\n      history.push(\"/websites\");\n    } else {\n      setFormErrors(result.errors);\n    }\n  }\n\n  /** Update form data field */\n  function handleChange(evt) {\n    const { name, value } = evt.target;\n    setFormData(data => ({ ...data, [name]: value }));\n  }\n\n  return (\n      <div className=\"SignupForm\">\n        <div className=\"container col-md-6 offset-md-3 col-lg-4 offset-lg-4\">\n          <h2 style={{color: 'rgba(246, 69, 122, 0.792)'}} className=\"mb-3\">Sign Up</h2>\n        <div  style={{borderRadius: '6px', backgroundImage: 'linear-gradient(to  left, rgba(47, 45, 53, 0.777), rgba(22, 22, 36, 0.908))'}} className=\"container \">\n            <div className=\"card-body\">\n              <form className=\"text-white\" onSubmit={handleSubmit}>\n                <div className=\"form-group\">\n                  <label>Username</label>\n                  <input\n                      name=\"username\"\n                      className=\"form-control\"\n                      value={formData.username}\n                      onChange={handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Password</label>\n                  <input\n                      type=\"password\"\n                      name=\"password\"\n                      className=\"form-control\"\n                      value={formData.password}\n                      onChange={handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>First name</label>\n                  <input\n                      name=\"firstName\"\n                      className=\"form-control\"\n                      value={formData.firstName}\n                      onChange={handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Last name</label>\n                  <input\n                      name=\"lastName\"\n                      className=\"form-control\"\n                      value={formData.lastName}\n                      onChange={handleChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label>Email</label>\n                  <input\n                      type=\"email\"\n                      name=\"email\"\n                      className=\"form-control\"\n                      value={formData.email}\n                      onChange={handleChange}\n                  />\n                </div>\n\n                {formErrors.length\n                    ? <Alert type=\"danger\" messages={formErrors} />\n                    : null\n                }\n\n                <button \n\n                    onSubmit={handleSubmit}\n                >\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n}\n\nexport default SignupForm;","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport UserContext from \"../auth/UserContext\";\n\n/** \"Higher-Order Component\" for private routes.\n *\n * In routing component, use these instead of <Route ...>. This component\n * will check if there is a valid current user and only continues to the\n * route if so. If no user is present, redirects to login form.\n */\n\nfunction PrivateRoute({ exact, path, children }) {\n  const { currentUser } = useContext(UserContext);\n\n  console.debug(\n      \"PrivateRoute\",\n      \"exact=\", exact,\n      \"path=\", path,\n      \"currentUser=\", currentUser,\n  );\n\n  if (!currentUser) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n      <Route exact={exact} path={path}>\n        {children}\n      </Route>\n  );\n}\n\nexport default PrivateRoute;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport JoblyApi from \"../api/api\";\nimport SkillCardList from \"../skills/SkillCardList\";\nimport LoadingSpinner from \"../common/LoadingSpinner\";\n\n/** Company Detail page.\n *\n * Renders information about company, along with the jobs at that company.\n *\n * Routed at /companies/:handle\n *\n * Routes -> CompanyDetail -> JobCardList\n */\n\nfunction WebsiteDetail() {\n  const { id } = useParams();\n  console.debug(\"Website Detail\", \"id=\", id);\n\n  const [website, setWebsite] = useState(null);\n\n  useEffect(function getCompanyAndJobsForUser() {\n    async function getCompany() {\n      setWebsite(await JoblyApi.getWebsite(id));\n    }\n\n    getCompany();\n  }, [id]);\n\n  if (!website) return <LoadingSpinner />;\n\n  return (\n      <div style={{paddingBottom: '15px', borderRadius: '6px', border: '4px solid rgba(30, 98, 108, 0.729)'}} className=\"CompanyList text-center col-md-8 offset-md-2\">\n    \n            <div className=\"container  mt-4\" style={{ paddingTop: '15px', paddingBottom: '15px', borderRadius: '4px', borderBottom: '4px solid rgba(30, 98, 108, 0.729)', backgroundImage: 'linear-gradient(to  left, rgba(47, 45, 53, 0.777), rgba(22, 22, 36, 0.908))'}}>\n              <p className=\" display-4\" style={{fontSize: '47px', color: 'rgba(31, 117, 131, 0.821)'}}>{website.title}</p>\n       \n              <a className=\"font-weight-bold text-center\" style={{color: 'rgba(246, 69, 122, 0.792)', fontSize: '20px'}} href={website.web_url}>\n               {website.web_url}</a>\n            </div>\n\n            <div className=\"container mt-4\" style={{border: '4px solid rgba(30, 98, 108, 0.729)', borderRadius: '6px'}}>\n                <div className=\"card text-white mb-5 mt-3 text-left\" style={{borderBottom: '4px solid rgba(30, 98, 108, 0.729)', backgroundImage: 'linear-gradient(to  left, rgba(5, 20, 43, 0.700), rgba(11, 22, 36, 0.900))'}}>\n                    <p  className=\"mt-3 mr-3 mb-3 ml-3 text-primary\" >\n                    {website.description}\n                    </p>\n                </div>\n                <h3 style={{color: 'rgba(5, 20, 43, 0.700)'}} className=\"display-4 mb-4\">{`Areas of Expertise...`}</h3>\n\n              <SkillCardList skills={website.skills} />\n            </div>\n      </div>\n  );\n}\n\nexport default WebsiteDetail;\n","export default __webpack_public_path__ + \"static/media/Matthew-Joki.fb20a51b.jpg\";","import React from \"react\"\nimport Matthew from './Matthew-Joki.jpg'\n\nconst Summary = () => {\n\n    return (\n        <div style={{borderRadius: '6px', border: '4px solid rgba(30, 98, 108, 0.729)'}} className=\"container\">\n            <div style={{borderBottom: '4px solid rgba(30, 98, 108, 0.729)', borderRadius: '4px', padding: '15px', backgroundImage: 'linear-gradient(to  left, rgba(47, 45, 53, 0.777), rgba(22, 22, 36, 0.908))'}} className=\"container text-white   mt-3\">\n                <img style={{float: 'right'}} src={Matthew} height=\"200\" width=\"200\" alt=\"\" />\n                    Been to Lowe's or Walmart lately? I'm the guy who assembles everything you see outside the front of the store (inside too), and my boss sends me to cover stores from Auburn, AL to Troy, AL because he knows that I resolve any problems and find solutions to all issues that I encounter no matter how large (which spares a lot of agony).  It's hard work, it's dirty, it's hot, and there is driving involved because income is based on current store needs and available work, but I'm blessed to have this job, and I always strive to go above and beyond what is required of me.\n            </div>\n            <p style={{borderBottom: '4px solid rgba(30, 98, 108, 0.729)', borderRadius: '4px', padding: '15px', backgroundImage: 'linear-gradient(to  left, rgba(47, 45, 53, 0.777), rgba(22, 22, 36, 0.908))'}} className=\"container text-white   mt-3\">Needless to say, I live to make provision for my family, as well as to serve my co-workers and neighbors, and because I use every resource available to gain the knowledge needed to solve the problems that most people don't want to deal with, they trust that they can count on me to come through every time.  I'm blessed in that I have a phenomenal support network in my personal life, and I incorporate that positive energy into my work ethic.  Trust, dependability, and hard work are the redeeming qualities that create the relationships that companies are founded on, and those attributes define how I strive to live my daily life.</p>\n            <p style={{borderBottom: '4px solid rgba(30, 98, 108, 0.729)', borderRadius: '4px', padding: '15px', backgroundImage: 'linear-gradient(to  left, rgba(47, 45, 53, 0.777), rgba(22, 22, 36, 0.908))'}} className=\"container text-white   mt-3\">Growing up, I developed an affection for music, and as a result I learned how to play the synthesizer, which at its core uses different interconnected components as building blocks for sound design, and I also learned how to develop multi-track programs using MIDI and sequencers.  As I got older, the programs got larger, and I filled my desire to perfect my hunger for systems design at Trenholm State Technical College, where I graduated Magna cum laude, and was awarded an Associate's Degree in Applied Computer Science.</p>\n            <p style={{borderBottom: '4px solid rgba(30, 98, 108, 0.729)', borderRadius: '4px', padding: '15px', backgroundImage: 'linear-gradient(to  left, rgba(47, 45, 53, 0.777), rgba(22, 22, 36, 0.908))'}} className=\"container text-white   mt-3\">Currently, I am using the polished skills that I have recently obtained from completing the Software Engineering curriculum at Auburn University!</p>\n            <p style={{borderBottom: '4px solid rgba(30, 98, 108, 0.729)', borderRadius: '4px', padding: '15px', backgroundImage: 'linear-gradient(to  left, rgba(47, 45, 53, 0.777), rgba(22, 22, 36, 0.908))'}} className=\"container text-white   mt-3\">Please feel free to reach out, and be sure to check out my projects on my LinkedIn profile.</p>\n        </div>\n    )\n}\n\nexport default Summary","import React, { useState, useEffect, useContext } from \"react\";\nimport JoblyApi from \"../api/api\";\nimport UserContext from \"../auth/UserContext\";\nimport Summary from \"./Summary\";\nimport MatthewResume from './Matthew-Joki-Resume.pdf'\n\nfunction AboutPage() {\n  console.debug(\"About Page\");\n  const {currentUser} = useContext(UserContext)\n  const [skills, setSkills] = useState(null);\n  console.debug(\"currentUser=\", currentUser, \"Skills\", skills)\n\nuseEffect(function getAllJobsOnMount() {\n  console.debug(\"SkillList useEffect getAllJobsOnMount\");\n  search();\n}, []);\n\nasync function search(name) {\n  let skills = await JoblyApi.getSkills(name);\n  setSkills(skills);\n}\n\n  return (\n      <div style={{paddingBottom: '15px', borderRadius: '6px', border: '4px solid rgba(30, 98, 108, 0.729)'}} className=\"JobList col-md-8 offset-md-2\">\n        <div className=\"container  mt-4\" style={{borderRadius: '4px', borderBottom: '4px solid rgba(30, 98, 108, 0.729)', backgroundImage: 'linear-gradient(to  left, rgba(47, 45, 53, 0.777), rgba(22, 22, 36, 0.908))'}}>\n          <h1 style={{color: 'rgba(31, 117, 131, 0.821)'}} className=\"display-4 \">Matthew Joki</h1>\n          <h2 style={{color: 'rgba(246, 69, 122, 0.792)', marginLeft: '35px'}} >Full Stack Developer</h2>\n            {/* <img style={{float: 'right', marginRight: '10px'}} src={Matthew} height=\"200\" width=\"200\" /> */}\n          <a style={{marginLeft: '5px', fontSize: '20px'}} href={MatthewResume}>Click For Resume</a>\n        </div>\n        <br />\n        <br />\n        <Summary />\n      </div>\n  );\n}\n\nexport default AboutPage;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Homepage from \"../homepage/Homepage\";\nimport WebsiteList from \"../websites/WebsiteList\";\nimport SkillList from \"../skills/SkillList\";\nimport LoginForm from \"../auth/LoginForm\";\nimport ProfileForm from \"../profiles/ProfileForm\";\nimport SignupForm from \"../auth/SignupForm\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport WebsiteDetail from \"../websites/WebsiteDetail\";\nimport AboutPage from '../user/AboutPage'\n\n/** Site-wide routes.\n *\n * Parts of site should only be visitable when logged in. Those routes are\n * wrapped by <PrivateRoute>, which is an authorization component.\n *\n * Visiting a non-existant route redirects to the homepage.\n */\n\nfunction Routes({ login, signup }) {\n  console.debug(\n      \"Routes\",\n      `login=${typeof login}`,\n      `register=${typeof register}`,\n  );\n\n  return (\n      <div className=\"pt-5\">\n        <Switch>\n\n          <Route exact path=\"/\">\n            <Homepage />\n          </Route>\n\n          <Route exact path=\"/login\">\n            <LoginForm login={login} />\n          </Route>\n\n          <Route exact path=\"/signup\">\n            <SignupForm signup={signup} />\n          </Route>\n\n          <PrivateRoute exact path=\"/about\">\n            <AboutPage />\n          </PrivateRoute>\n\n          <PrivateRoute exact path=\"/websites\">\n            <WebsiteList />\n          </PrivateRoute>\n\n          <PrivateRoute exact path=\"/skills\">\n            <SkillList />\n          </PrivateRoute>\n\n          <PrivateRoute exact path=\"/websites/:id\">\n            <WebsiteDetail />\n          </PrivateRoute>\n{/* \n          <PrivateRoute exact path=\"/websites/:id/skills/:name\">\n            <WebsiteDetail />\n          </PrivateRoute> */}\n\n          <PrivateRoute path=\"/profile\">\n            <ProfileForm />\n          </PrivateRoute>\n\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n  );\n}\n\nexport default Routes;\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport Navigation from \"./routes-nav/Navigation\";\nimport Routes from \"./routes-nav/Routes\";\nimport LoadingSpinner from \"./common/LoadingSpinner\";\nimport JoblyApi from \"./api/api\";\nimport UserContext from \"./auth/UserContext\";\nimport jwt from \"jsonwebtoken\";\n\n// Key name for storing token in localStorage for \"remember me\" re-login\nexport const TOKEN_STORAGE_ID = \"jobly-token\";\n\n\nfunction App() {\n  const [infoLoaded, setInfoLoaded] = useState(false);\n\n  const [currentUser, setCurrentUser] = useState(null);\n  const [token, setToken] = useLocalStorage(TOKEN_STORAGE_ID);\n\n  console.debug(\n      \"App\",\n      \"infoLoaded=\", infoLoaded,\n      \"currentUser=\", currentUser,\n      \"token=\", token,\n  );\n\n  useEffect(function loadUserInfo() {\n    console.debug(\"App useEffect loadUserInfo\", \"token=\", token);\n\n    async function getCurrentUser() {\n      if (token) {\n        try {\n          let { username } = jwt.decode(token);\n          // put the token on the Api class so it can use it to call the API.\n          JoblyApi.token = token;\n          let currentUser = await JoblyApi.getCurrentUser(username);\n          setCurrentUser(currentUser);\n        } catch (err) {\n          console.error(\"App loadUserInfo: problem loading\", err);\n          setCurrentUser(null);\n        }\n      }\n      setInfoLoaded(true);\n    }\n\n    // set infoLoaded to false while async getCurrentUser runs; once the\n    // data is fetched (or even if an error happens!), this will be set back\n    // to false to control the spinner.\n    setInfoLoaded(false);\n    getCurrentUser();\n  }, [token]);\n\n  /** Handles site-wide logout. */\n  function logout() {\n    setCurrentUser(null);\n    setToken(null);\n  }\n\n  /** Handles site-wide signup.\n   *\n   * Automatically logs them in (set token) upon signup.\n   *\n   * Make sure you await this function and check its return value!\n   */\n  async function signup(signupData) {\n    try {\n      let token = await JoblyApi.signup(signupData);\n      setToken(token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"signup failed\", errors);\n      return { success: false, errors };\n    }\n  }\n\n  /** Handles site-wide login.\n   *\n   * Make sure you await this function and check its return value!\n   */\n  async function login(loginData) {\n    try {\n      let token = await JoblyApi.login(loginData);\n      setToken(token);\n      return { success: true };\n    } catch (errors) {\n      console.error(\"login failed\", errors);\n      return { success: false, errors };\n    }\n  }\n\n  if (!infoLoaded) return <LoadingSpinner />;\n\n  return (\n    <BrowserRouter>\n      <UserContext.Provider\n            value={{ currentUser, setCurrentUser }}>\n          <div className=\"App\">\n            <Navigation logout={logout} />\n            <Routes login={login} signup={signup} />\n          </div>\n        </UserContext.Provider>\n      </BrowserRouter>\n      );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n              \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\",\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === \"installed\") {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                    \"New content is available and will be used when all \" +\n                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\",\n                );\n\n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log(\"Content is cached for offline use.\");\n\n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error(\"Error during service worker registration:\", error);\n      });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get(\"content-type\");\n        if (\n            response.status === 404 ||\n            (contentType != null && contentType.indexOf(\"javascript\") === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n            \"No internet connection found. App is running in offline mode.\",\n        );\n      });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}